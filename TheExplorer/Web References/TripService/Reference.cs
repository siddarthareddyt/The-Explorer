//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TheExplorer.TripService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getTripDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatitudeLongitudeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentTimeAtLocationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::TheExplorer.Properties.Settings.Default.TheExplorer_TripService_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getTripDetailsCompletedEventHandler getTripDetailsCompleted;
        
        /// <remarks/>
        public event getNewsDetailsCompletedEventHandler getNewsDetailsCompleted;
        
        /// <remarks/>
        public event getLatitudeLongitudeCompletedEventHandler getLatitudeLongitudeCompleted;
        
        /// <remarks/>
        public event getCurrentTimeAtLocationCompletedEventHandler getCurrentTimeAtLocationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getTripDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getTripDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string origin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string destination) {
            object[] results = this.Invoke("getTripDetails", new object[] {
                        origin,
                        destination});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getTripDetailsAsync(string origin, string destination) {
            this.getTripDetailsAsync(origin, destination, null);
        }
        
        /// <remarks/>
        public void getTripDetailsAsync(string origin, string destination, object userState) {
            if ((this.getTripDetailsOperationCompleted == null)) {
                this.getTripDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTripDetailsOperationCompleted);
            }
            this.InvokeAsync("getTripDetails", new object[] {
                        origin,
                        destination}, this.getTripDetailsOperationCompleted, userState);
        }
        
        private void OngetTripDetailsOperationCompleted(object arg) {
            if ((this.getTripDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTripDetailsCompleted(this, new getTripDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getNewsDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getNewsDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEnteredZipcode) {
            object[] results = this.Invoke("getNewsDetails", new object[] {
                        userEnteredZipcode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getNewsDetailsAsync(string userEnteredZipcode) {
            this.getNewsDetailsAsync(userEnteredZipcode, null);
        }
        
        /// <remarks/>
        public void getNewsDetailsAsync(string userEnteredZipcode, object userState) {
            if ((this.getNewsDetailsOperationCompleted == null)) {
                this.getNewsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewsDetailsOperationCompleted);
            }
            this.InvokeAsync("getNewsDetails", new object[] {
                        userEnteredZipcode}, this.getNewsDetailsOperationCompleted, userState);
        }
        
        private void OngetNewsDetailsOperationCompleted(object arg) {
            if ((this.getNewsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewsDetailsCompleted(this, new getNewsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getLatitudeLongitude", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getLatitudeLongitude([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipcode) {
            object[] results = this.Invoke("getLatitudeLongitude", new object[] {
                        zipcode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getLatitudeLongitudeAsync(string zipcode) {
            this.getLatitudeLongitudeAsync(zipcode, null);
        }
        
        /// <remarks/>
        public void getLatitudeLongitudeAsync(string zipcode, object userState) {
            if ((this.getLatitudeLongitudeOperationCompleted == null)) {
                this.getLatitudeLongitudeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatitudeLongitudeOperationCompleted);
            }
            this.InvokeAsync("getLatitudeLongitude", new object[] {
                        zipcode}, this.getLatitudeLongitudeOperationCompleted, userState);
        }
        
        private void OngetLatitudeLongitudeOperationCompleted(object arg) {
            if ((this.getLatitudeLongitudeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatitudeLongitudeCompleted(this, new getLatitudeLongitudeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getCurrentTimeAtLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getCurrentTimeAtLocation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipcode) {
            object[] results = this.Invoke("getCurrentTimeAtLocation", new object[] {
                        zipcode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentTimeAtLocationAsync(string zipcode) {
            this.getCurrentTimeAtLocationAsync(zipcode, null);
        }
        
        /// <remarks/>
        public void getCurrentTimeAtLocationAsync(string zipcode, object userState) {
            if ((this.getCurrentTimeAtLocationOperationCompleted == null)) {
                this.getCurrentTimeAtLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentTimeAtLocationOperationCompleted);
            }
            this.InvokeAsync("getCurrentTimeAtLocation", new object[] {
                        zipcode}, this.getCurrentTimeAtLocationOperationCompleted, userState);
        }
        
        private void OngetCurrentTimeAtLocationOperationCompleted(object arg) {
            if ((this.getCurrentTimeAtLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentTimeAtLocationCompleted(this, new getCurrentTimeAtLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getTripDetailsCompletedEventHandler(object sender, getTripDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTripDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTripDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewsDetailsCompletedEventHandler(object sender, getNewsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getLatitudeLongitudeCompletedEventHandler(object sender, getLatitudeLongitudeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatitudeLongitudeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLatitudeLongitudeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCurrentTimeAtLocationCompletedEventHandler(object sender, getCurrentTimeAtLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentTimeAtLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentTimeAtLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
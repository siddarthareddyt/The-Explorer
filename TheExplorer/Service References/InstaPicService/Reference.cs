//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheExplorer.InstaPicService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hotel", Namespace="http://schemas.datacontract.org/2004/07/ExplorerElective")]
    [System.SerializableAttribute()]
    public partial class Hotel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cost {
            get {
                return this.CostField;
            }
            set {
                if ((object.ReferenceEquals(this.CostField, value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InstaPicService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFood", ReplyAction="http://tempuri.org/IService1/GetFoodResponse")]
        TheExplorer.InstaPicService.Hotel[] GetFood(string term, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFood", ReplyAction="http://tempuri.org/IService1/GetFoodResponse")]
        System.Threading.Tasks.Task<TheExplorer.InstaPicService.Hotel[]> GetFoodAsync(string term, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OrderByRating", ReplyAction="http://tempuri.org/IService1/OrderByRatingResponse")]
        TheExplorer.InstaPicService.Hotel[] OrderByRating(TheExplorer.InstaPicService.Hotel[] myHotels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OrderByRating", ReplyAction="http://tempuri.org/IService1/OrderByRatingResponse")]
        System.Threading.Tasks.Task<TheExplorer.InstaPicService.Hotel[]> OrderByRatingAsync(TheExplorer.InstaPicService.Hotel[] myHotels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetURL", ReplyAction="http://tempuri.org/IService1/GetURLResponse")]
        string GetURL(int index, TheExplorer.InstaPicService.Hotel[] myHotels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetURL", ReplyAction="http://tempuri.org/IService1/GetURLResponse")]
        System.Threading.Tasks.Task<string> GetURLAsync(int index, TheExplorer.InstaPicService.Hotel[] myHotels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImages", ReplyAction="http://tempuri.org/IService1/GetImagesResponse")]
        string[] GetImages(string longitude, string latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImages", ReplyAction="http://tempuri.org/IService1/GetImagesResponse")]
        System.Threading.Tasks.Task<string[]> GetImagesAsync(string longitude, string latitude);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TheExplorer.InstaPicService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TheExplorer.InstaPicService.IService1>, TheExplorer.InstaPicService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TheExplorer.InstaPicService.Hotel[] GetFood(string term, string location) {
            return base.Channel.GetFood(term, location);
        }
        
        public System.Threading.Tasks.Task<TheExplorer.InstaPicService.Hotel[]> GetFoodAsync(string term, string location) {
            return base.Channel.GetFoodAsync(term, location);
        }
        
        public TheExplorer.InstaPicService.Hotel[] OrderByRating(TheExplorer.InstaPicService.Hotel[] myHotels) {
            return base.Channel.OrderByRating(myHotels);
        }
        
        public System.Threading.Tasks.Task<TheExplorer.InstaPicService.Hotel[]> OrderByRatingAsync(TheExplorer.InstaPicService.Hotel[] myHotels) {
            return base.Channel.OrderByRatingAsync(myHotels);
        }
        
        public string GetURL(int index, TheExplorer.InstaPicService.Hotel[] myHotels) {
            return base.Channel.GetURL(index, myHotels);
        }
        
        public System.Threading.Tasks.Task<string> GetURLAsync(int index, TheExplorer.InstaPicService.Hotel[] myHotels) {
            return base.Channel.GetURLAsync(index, myHotels);
        }
        
        public string[] GetImages(string longitude, string latitude) {
            return base.Channel.GetImages(longitude, latitude);
        }
        
        public System.Threading.Tasks.Task<string[]> GetImagesAsync(string longitude, string latitude) {
            return base.Channel.GetImagesAsync(longitude, latitude);
        }
    }
}
